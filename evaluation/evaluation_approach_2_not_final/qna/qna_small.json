{
    "qa_pairs": [
        {
            "question": "What causes a YARN Node Manager failure and how can it be mitigated?",
            "answer": "A Node Manager failure on pr1node01 was due to excessive disk usage from krb5kdc logs. These logs had grown to 80GB. The mitigation included deleting old logs and changing log rotation policy to weekly, keeping only 7 logs instead of 12.",
            "category": "Infrastructure & Deployment",
      "context": "# mno - BigStreamer - IM2095156 - Alarm on PRDBA  Cloudera Manager\\n\\n</b>Description:</b>\\n\\n```\\nWe have a critical alarm in PRDBA Cloudera Manager -\\n\\nYARM -- Node Manager (pr1node03)\\nProcess Status\\n\\nThank you\\n```\\n\\n<b>Actions Taken:</b>\\n\\n1. Login to Cloudera UI for the PR Site\\n2. Cloudera > Yarn\\n3. Upon inspection we noticed that the alert was about pr1node01 (Node Manager) and not pr1node03 (JobHistory Server)\\n4. Ssh pr1node01 and inspect logs at /var/loh/hadoop-yarn. We could not find the root cause from logs\\n5. Restart the Node Manager role for the specific node. After the restart the alert disappeared.\\n6. During further investigation, from Cloudera UI we saw that prior to ```Process Status``` alert there was a ```NODE_MANAGER_LOG_FREE_SPACE``` alert\\n7. From pr1node01 as root `df -h /`. The usage of `/` was at 98% at that time\\n8. Upon inspection we noticed that the krb5kdc logs had increased over the last months peaking the monthly log file to ~80G.\\n9. We proceeded to the removal of krb5kdc log files for 2022.\\n10. As a permanent solution, we implemented changes to retention policy for krb5kdc logs. Specifically, we changed the rotation to weekly from monthly and the storage to 7 old logs from 12 logs files that it was prior the change.  This change was implemented at pr1node02, dr1node01 and dr1node02 as well.\\n\\n\\n    ![logrotate_krb5kdc](.media/IM2095156/IM2095156_logrotate_krb5kdc.PNG)\\n\\n<b>Our Ticket Response:</b>\\n\\n```\\n09/03/23 15:47:41 Europe/Eastern (MASTROKOSTA MARIA):\\nGood evening,\\n\\nFollowing the investigation, we have changed the retention for krb5kdc logs. Specifically, we have set the rotation to be weekly instead of monthly and to keep 7 log files. Note that the monthly krb5kdc log file had reached 80G.\\n\\nPlease let us know if we can proceed with closing the ticket.\\n\\nThank you\\n\\n01/03/23 07:16:41 Europe/Eastern (MASTROKOSTA MARIA):\\nGood morning,\\n\\nThere was a malfunction in the yarn node manager since 3.42, resulting in the ibank and online streaming topologies falling as recorded in ticket SD2157107.\\n\\nWe proceeded to restart at 4:53 to get it back up. During the restart, the online merge batch crashed, which was resubmitted (related ticket SD2157111).\\n\\nAt this time, yarn and the flows are running normally.\\n\\nFrom the investigation it appears that the root partition on pr1node01 had filled up, which was caused by the local kdc logs. We have proceeded to clean the corresponding log files and are investigating changes to the retention of the logs to avoid future problems.\\n\\nPlease let us know if you consider the workaround acceptable.\\n\\nThank you\\n```"          },
          {
            "question": "How do you rerun a failed Merge Batch ingestion job for IBank and why is it done in patches?",
            "answer": "You rerun the job using the following commands split by time window to manage load:\\n```bash\\n/opt/ingestion/PRODREST/ibank/spark/submit/submitmnoSparkTopology_batch_cluster_mno_STABLE.sh \\\"2023-02-28 00:00:00\\\" \\\"2023-02-28 12:00:00\\\"\\n/opt/ingestion/PRODREST/ibank/spark/submit/submitmnoSparkTopology_batch_cluster_mno_STABLE.sh \\\"2023-02-28 12:00:00\\\" \\\"2023-02-28 18:00:00\\\"\\n/opt/ingestion/PRODREST/ibank/spark/submit/submitmnoSparkTopology_batch_cluster_mno_STABLE.sh \\\"2023-02-28 18:00:00\\\" \\\"2023-03-01 00:00:00\\\"\\n```\\nThis ensures that large record volumes are handled without overloading HBase or Impala.",
            "category": "Application Functionality & Flow",
      "context": "# mno - BigStreamer - IM2095966 - Failed Batch Job on Grafana\\n\\n<b>Description:</b>\\n\\n```\\nGood evening,\\n\\nThe following failed batch job appeared in the Grafana system:\\n\\napplication :  IBank_Ingestion\\njob_name : MergeBatch\\ncomponent : JOB\\ndate : 28-02-2023\\nstatus : FAILED\\ndescription :\\nhost : pr1edge01.mno.gr\\n```\\n\\n<b>Actions Taken:</b>\\n\\n1. We identified the failed step using the alarm name. Steps `MSSQL Sqoop Import (Migration)` and `Insert to Service Audit` had been executed successfully. We rerun the `Merge Batch` according to [this](../supportDocuments/applicationFlows/ibank.md#merge-batch).\\n2. The job had not completed at approximately 9.pm on 01/03/2023 we terminated the job after communication with the customer in order for the night flow to run without any problems. We scheduled to rerun the job in the following day after the completion of the daily MergeBatch.\\n3. On 02/03/2023 we reran the job in 3 patches \\n   ```bash\\n   /opt/ingestion/PRODREST/ibank/spark/submit/submitmnoSparkTopology_batch_cluster_mno_STABLE.sh \\\"2023-02-28 00:00:00\\\" \\\"2023-02-28 12:00:00\\\"\\n   /opt/ingestion/PRODREST/ibank/spark/submit/submitmnoSparkTopology_batch_cluster_mno_STABLE.sh \\\"2023-02-28 12:00:00\\\" \\\"2023-02-28 18:00:00\\\"\\n   /opt/ingestion/PRODREST/ibank/spark/submit/submitmnoSparkTopology_batch_cluster_mno_STABLE.sh \\\"2023-02-28 18:00:00\\\" \\\"2023-03-01 00:00:00\\\"\\n   ```\\n4. The `Upsert to HBase` stage that synchronises the `Visible` table caused an Impala problem during which Impala stopped to process this job as well as other requests.\\n5. The problem is described below.\\n\\n<b>Our Ticket Response:</b>\\n\\n```\\n03/03/23 11:17:49 Europe/Eastern (POULAS GIORGOS):\\nAfter investigating yesterday's Impala issue, we found the following:\\n\\nDue to HBase quotas set in the PROD_IBANK namespace, we have limited the parallelism in the Impala query to run on an Impala daemon.\\n\\nThe daemon that ran the query to enrich the Service Audit Visible (pr1node04) encountered a problem as it did not have the resources required to process the large volume of records we had at the end of the month, while at the same time accepting requests from the REST APIs of the live streams.\\n\\nAs a result of the above, the queries from the live systems were not completing and accumulating, exhausting the available connections that Impala can accept. The malfunction of the live streams is also the problem you observed last night.\\n\\nWe propose as a workaround today after 9pm. disable quotas in the PROD_IBANK namespace and rerun the script without the single node limitation, so that the load is shared across all 9 available Impala daemons. We will then examine the alternatives for modifying the flow and re-enabling quotas.\\n\\nThere is no downtime required for the above actions.\\n\\nIf you need further information we can arrange a call.\\n\\nG. Poulas\\n03/03/23 00:53:26 Europe/Eastern (MASTROKOSTA MARIA):\\nGood evening,\\n\\nThe service audit has been filled on the PR Site. The job that fills the visible table is pending as it was canceled in the context of ticket SD2159021.\\n\\nThank you\\n03/03/23 00:52:57 Europe/Eastern (MASTROKOSTA MARIA):\\nGood evening,\\n\\nThe service audit has been filled on the PR Site. The job that fills the visible table is pending as it was canceled under ticket SD2159021.\\n\\nThank you\\n02/03/23 15:56:38 Europe/Eastern (MASTROKOSTA MARIA):\\nGood evening,\\n\\nThe execution on both sites started after the scheduled execution of the Merge Batch for 01/03/2023, which has been completed without a problem. At this time, the DR has processed until 18:00, while the PR has processed the data until 12:00. The executions on both sites are being monitored so that they can be resubmitted in case of a problem.\\n\\nThank you\\n02/03/23 15:54:31 Europe/Eastern (MASTROKOSTA MARIA):\\nGood evening,\\n\\nThe execution on both sites started after the scheduled Merge Batch execution on 01/03/2023, which has been completed without any problems. At the moment, the DR has processed until 18:00, while the PR has processed the data until 12:00. The executions on both sites are being monitored so that they can be resubmitted in case of a problem.\\n\\nThank you\\n01/03/23 21:11:19 Europe/Eastern (MASTROKOSTA MARIA):\\nFollowing our telephone communication, the job has been stopped and will be re-executed tomorrow in order to avoid problems with the evening streams.\\n\\nThank you\\n```\\n"          },
          {
            "question": "How should you run a MAN_DATE extract and export job when there is a duplicate key error?",
            "answer": "Use the `-f` flag to force truncation before running extract and export scripts to avoid primary key constraint violations:\\n```bash\\n/opt/ingestion/PRODUSER/datawarehouse-ibank/extract_details/sched_extract_details.sh -t manDate -f\\n/opt/ingestion/PRODUSER/datawarehouse-ibank/extract_details/sched_export_details.sh -t manDate -f\\n```",
            "category": "Application Functionality & Flow",
            "context": "# mno - BigStreamer - IM2117067 - Grafana Batch Job failed\\n\\n<b>Description:</b>\\n\\nTitle: Batch Job Failed\\nBody:\\n```\\nHello,\\n\\nToday 29/03 in Grafana application a failed Batch Job appeared.\\n\\nApplication : DWH_IBank\\nJob_Name : Extract\\nComponent: MAN_DATE\\nDate: 28/03/23\\nStatus: Failed\\nDescription Code 1\\n```\\n\\nInformation regarding the extract, logs etc. available [here](https://metis.ghi.com/obss/oss/sysadmin-group/support/-/blob/master/KnowledgeBase/mno/BigStreamer/supportDocuments/applicationFlows/datawarehouse-ibank.md#man-date-extract) \\n\\nInformation regarding the export, logs etc. available [here](https://metis.ghi.com/obss/oss/sysadmin-group/support/-/blob/master/KnowledgeBase/mno/BigStreamer/supportDocuments/applicationFlows/datawarehouse-ibank.md#man-date-export) \\n\\n</b>Actions Taken:</b>\\n\\nWe tried to invoke the Extract MAN_DATE script but it failed multiple times. After investigating the logs of the executor using internal firefox and the logs of the DWH_Ibank_MAN_DATE script we saw the following :\\n\\n`Cannot insert dublicate key in object srcib.MandateDetails. The dublicate key value is (e5435435-4354254235-121nfdgd33)`\\n\\n\\nThat means that the table already has records in it, so we have to drop this records or invoke the script with the `-f` option that gives the ability to trancate the table and then insert the records. \\n\\n```\\n/opt/ingestion/PRODUSER/datawarehouse-ibank/extract_details/sched_extract_details.sh -t manDate -f\\n```\\n\\nAfter executing the extract script, we use the same `-f` to run the export script. The reason that we are running export is because in the above mentioned step we run the extract and trancated the table so the export is neccessary. \\n\\n```\\n/opt/ingestion/PRODUSER/datawarehouse-ibank/extract_details/sched_export_details.sh -t manDate -f\\n```\\n\\nThe issue has been resolved by executing the above two commands. The key in this case was to find in the logs that we have dublicate keys. "          },
          {
            "question": "What is the procedure to continue the merge batch and HBase upsert process for failed DWH flows due to a stalled job on February 29?",
            "answer": "Manually execute merge batch steps on PR site using instructions from the application flow documentation. Then use HDFS replication to copy data to DR and run the HBase upsert step using:\\n```bash\\n/opt/ingestion/PRODREST/common/scripts/ibank_visible_trn_hbase_daily_upsert_STABLE.sh 20240229\\n```\\nEnsure HBase markers and Kudu partitions are cleaned and reset properly using `alter table ... drop range partition` and `add range partition`.",
            "category": "Application Functionality & Flow",
      "context": "# mno - BigStreamer - IM2285747 - merge batch 29/2\\n\\n<b>Description:</b>\\n\\n```\\nGood evening,\\n\\ncould you please check the merge batch in DR/pr for 2/29. It seems to be still running. We have disabled it on 1/31 until this is finished.\\n\\nThanks,\\nThanos\\n```\\n\\n<b>Investigation:</b>\\n\\n**Ndef**: All log paths and query executions are found/executed from pr1edge01/dr1edge01.\\n\\n1. Login to Grafana and make sure that the failed step is the Merge Batch.\\n2. Login to DR/PR edge nodes and through the node's firefox check YARN at https://dr1node03:8090 and https://pr1node03:8090 for the PROD_Ibank merge batch job.\\n3. Check the stages tab for stages that have been completed for this job. At PR the `insert into` stages had completed after 8h. The RDD stages had failed and continued failing.\\n![Yarn UI](.media/IM2285747_1.png)\\n![Spark Stages](.media/IM2285747_2.png)\\n4. The 8 hour mark gives us some clues as to the failure. In essence after 8 hours kerberos tickets are dropped, leading to continuous authentication failures and timeouts as shown in the logs `/var/log/ingestion/PRODREST/ibank/log/cronExecutor_ibankBatch_full.log`.\\n5. Checked the merge batch logs at `/var/log/ingestion/PRODREST/ibank/log/ibank_histMigrate_aggr_MergeBatchWithLock_v2.log` and `/var/log/ingestion/PRODREST/ibank/log/cronExecutor_ibankBatch_full.log` and indeed we found authorization errors.\\n6. Checked the size and count of the `service_audit_old` table through Impala and HDFS and it was found to be among the largest ever both in size (over 115 GB) and count (60 mil). The query used is `select  count(*) from prod_trlog_ibank.service_audit_old where par_dt=20240229`.\\n7. Inspecting the submition script we can see that for each individual sub-script the date is generated anew in the sub-script invocation. This means that since the merge in question spanned multiple dates, all steps started after the day's end wouldn't have completed succesfully.\\n8. Inspecting the range partitions through Impala with the query `show range partitions prod_trlog_ibank.service_audit_stream`, we can find multiple leftover range partitions since November. This added further computation time for the already large table.\\n\\nInvestigation for 05/03:\\n\\nFor this day, while the size and count were not unusually large the last step of the process, ie. the\\nhbase upsert took unusually long and couldn't complete on its own. The process seemed to get stuck on 1\\nsingular task as shown by the logs at `/var/log/ingestion/PRODREST/ibank/log/ibank_visible_trn_hbase_daily_upsert.log`, which leads us to conclude that a certain record was problematic because all tasks completed\\nnormally except a specific one that kept failling even on re-runs.\\n\\nInvestigation - Summary:\\n\\n- Greater than most end of the month dates size(over 115 GB) and count (60 mil)\\n- Multiple leftover range partitions\\n- Execution spanning multiple days, triggering the dynamic date issue with the submition script\\n- Stage execution surpassing the 8 hour mark, triggering a known kerberos authorization bug\\n- Problematic record for 05/03\\n\\n<b>Resolution:</b>\\n\\n1. Since the data was already loaded into PR for 29/2, the rest of the steps were executed manually on it\\n   according to https://metis.ghi.com/obss/oss/sysadmin-group/support/-/blob/master/KnowledgeBase/mno/BigStreamer/supportDocuments/applicationFlows/ibank.md?ref_type=heads#batch instructions for\\n   steps beyond the Merge Batch .\\n2. For all the remaining dates since 29/2 and because the cron jobs were stopped, each day was executed\\n   manually in full in each site, half of them (days) in PR and half of them (days) in DR following\\n   all the steps in the sub-steps guide from https://metis.ghi.com/obss/oss/sysadmin-group/support/-/blob/master/KnowledgeBase/mno/BigStreamer/supportDocuments/applicationFlows/ibank.md .\\n3. For each job completed in one site it was replicated over to the other using HDFS replication, through\\n   the destination's Cloudera Manager for both `service_audit` and `service_audit_old` tables. **A similar\\n   procedure for table replication exists in [Table Replication](./20201218-IM1389913.md) but not for HDFS replication.**\\n   - /mno_data/hive/warehouse/prod_trlog_ibank.db/service_audit_old/par_dt=$date\\n   - /mno_data/hive/warehouse/prod_trlog_ibank.db/service_audit/par_dt=$date\\n4. Once replicated the HBase Upsert step was run on the destination site according to https://metis.ghi.com/obss/oss/sysadmin-group/support/-/blob/master/KnowledgeBase/mno/BigStreamer/supportDocuments/applicationFlows/ibank.md?ref_type=heads#upsert-to-hbase-migration .\\n5. HBase markers were manually set for each job that didn't complete automatically according to https://metis.ghi.com/obss/oss/sysadmin-group/support/-/blob/master/KnowledgeBase/mno/BigStreamer/supportDocuments/applicationFlows/ibank.md?ref_type=heads#upsert-to-hbase-migration .\\n6. Kudu range partitions were cleaned up manually for all previous days and 3 new partitions were created\\n   for the 3 previous days, in order for the cleanup script to continue functioning as nornal. More details\\n   on this can be found at the end of this document.\\n\\n\\nResolution for 05/03 HBase Upsert:\\n\\nFor this operation specifically more resources had to be allocated to the spark-submit job at `/opt/ingestion/PRODREST/ibank/spark/submit/visible_trn_hbase_daily_upsert/submitVisibleTrnToHbaseIndexesDailyUpsert_STABLE.sh`. After its completion resources were reverted back to normal:\\n```\\nIncrease node count to 12\\nDecrease core count to 1\\nIncrease tasks to 40\\n```\\n\\nKudu Range Partitions:\\n\\nRange partitions are created for the `service_audit_stream` table on the `u_timestamp` column. The commands to create and delete them\\ncan be found below for some example dates. Ndef that those partitions are in UTC time, so the time to\\ncreate/drop must be converted to local time, taking into account DST. For winter we are at GMT+2 so in order\\nto include a full day it must range for 22:00 of the previous to 22:00 of the current (where current is the day you want to delete).\\n\\n```sh\\n# Drop\\nalter table prod_trlog_ibank.service_audit_stream drop range partition '2023-02-26T22:00:00.000000Z' <= VALUES < '2023-02-27T22:00:00.000000Z' ;\\n\\n# Create\\nalter table prod_trlog_ibank.service_audit_stream add range partition '1970-01-01T00:00:00.000000Z' <= VALUES < '2023-02-28T22:00:00.000000Z' ;\\n```\\n\\nThe example above includes the first partition, which tracks from 1970 to the date in question. When deleting previous partitions, the first one\\nmust be recreated in order to include the time from 1970 to the first date, and then you can create the daily partitions. For example, lets say we have\\nthe following partitions:\\n\\n```\\n| 1970-01-01T00:00:00.000000Z <= VALUES < 2023-11-29T22:00:00.000000Z | # We want to drop this one in order to include a bigger range\\n| 2023-11-29T22:00:00.000000Z <= VALUES < 2023-11-30T22:00:00.000000Z | # We want to drop this one due to policy\\n| 2023-11-30T22:00:00.000000Z <= VALUES < 2023-12-01T22:00:00.000000Z | # We want to drop this one because it contains trash. Ndef the merge has completed but didn't cleanup.\\n| 2023-12-01T22:00:00.000000Z <= VALUES < 2023-12-02T22:00:00.000000Z | # We want to drop this one because it contains trash. Ndef the merge has completed but didn't cleanup.\\n| 2023-12-02T22:00:00.000000Z <= VALUES < 2023-12-03T22:00:00.000000Z | # We want to drop this one because it contains trash. Ndef the merge has completed but didn't cleanup.\\n| 2023-12-03T22:00:00.000000Z <= VALUES < 2023-12-04T22:00:00.000000Z | # Current. This must not be touched\\n| 2023-12-04T22:00:00.000000Z <= VALUES < 2023-12-05T22:00:00.000000Z |\\n| 2023-12-05T22:00:00.000000Z <= VALUES < 2023-12-06T22:00:00.000000Z |\\n| 2023-12-06T22:00:00.000000Z <= VALUES < 2023-12-07T22:00:00.000000Z |\\n```\\n\\nThe above will become:\\n\\n```\\n| 2023-11-30T22:00:00.000000Z <= VALUES < 2023-12-01T22:00:00.000000Z | # This was created by including all dates from 1970 to this one\\n| 2023-12-01T22:00:00.000000Z <= VALUES < 2023-12-02T22:00:00.000000Z | # This was dropped and recreated\\n| 2023-12-02T22:00:00.000000Z <= VALUES < 2023-12-03T22:00:00.000000Z | # This was dropped and recreated\\n| 2023-12-03T22:00:00.000000Z <= VALUES < 2023-12-04T22:00:00.000000Z | # Current. This was not touched\\n| 2023-12-04T22:00:00.000000Z <= VALUES < 2023-12-05T22:00:00.000000Z |\\n| 2023-12-05T22:00:00.000000Z <= VALUES < 2023-12-06T22:00:00.000000Z |\\n| 2023-12-06T22:00:00.000000Z <= VALUES < 2023-12-07T22:00:00.000000Z |\\n```"          },
          {
            "question": "How do you handle and recover from a failed disk replacement on a DataNode (dr1node02) in HDFS?",
            "answer": "Unmount affected partitions, run `bdadiskutility`, and if cache issues occur, clear preserved cache using:\\n```bash\\nMegaCli64 -DiscardPreservedCache -L7 -force -a0\\n```\\nRe-add virtual disk with:\\n```bash\\nMegaCli64 CfgLdAdd r0[ENCLOSURE:slot] a0\\n```\\nAfter configuration, remount disks, verify with `lsblk`, and restart the DataNode service.",
            "category": "Infrastructure & Deployment",
      "context": "# mno - BigStreamer - SD2389640 - hdfs - Data Directory Status\\n\\n<b>Description:</b>\\n\\n```\\nGood morning,\\n\\nThe following alert has appeared in Cloudera Manager (DR):\\nDataNode (dr1node02)\\nData Directory Status\\n\\nThank you.\\n```\\n\\n<b>Actions Taken:</b>\\n\\nThere are references from the similar issue [20220620-SD1951890.md](20220620-SD1951890.md).\\n\\nAfter investigation we saw that the problem occurred due to disk issue on dr1node02.\\n\\nWe communicated with Oracle and disk replacement was scheduled.\\n\\n> Ndef that disk replacement perfomerd online so there was no downtime.\\n\\nWe followed the steps as described at [20220620-SD1951890.md](20220620-SD1951890.md) and [sync_mysql.md](sync_mysql.md), which include the following:\\n\\n1. Stopping the processes that specifically run at the disk slots `s1` and `s7` of the server `dr1node02`. On our case was the hdfs datanode and some yarn applications . We identified them with:\\n\\n2. Stopping the mysql slaves using the command:\\n```\\nmysql -u root -p\\nSHOW SLAVE STATUS\\\\G;\\n```\\n\\n3. Ensuring that the no processes are running at the partitions with the following commands:\\n```bash\\nlsof /u02\\n```\\n\\n```bash\\nlsof /u08\\n```\\n\\n4. Unmounting the two partitions, so the disks can be replaced.\\n\\n```bash\\numount <mountpoint>\\n```\\n\\n5. Once the disks have been replaced we ran the following command for both partitions:\\n\\n```bash\\nbdadiskutility /u02\\n```\\n\\n6. After running the command, we got the following error:\\n```\\nVirtual Drive <VIRTUAL_DRIVE_NUMBER> is incorrectly mapped.\\n<TIMESTAMP> : Error executing 'MegaCli64 CfgLdAdd r0[<ENCLOSURE>:<SLOT>] a0'\\n<TIMESTAMP> : Error code is 84 . Response is <<\\nAdapter 0: Configure Adapter Failed\\n\\nFW error description:\\nThe current operation is not allowed because the controller has data in cache for offline or missing virtual disks.\\n\\nExit Code: 0x54>>\\nFound a disk with a Firmware State of Unconfigured(good).\\nSuccessfully cleared the cache for the logical drive.\\nSuccessfully added the disk to its own RAID(0) volume.\\n```\\n\\n7. After communicating with Oracle Support [SR 3-36895603206 : Wrong disk status after replacement](https://support.oracle.com/epmos/faces/SrDetail?_afrLoop=206254157461870&srNumber=3-36895603206&queryModeName=Technical&needSrDetailRefresh=true&_afrvwxowMode=0&_adf.ctrl-state=iwvcvrye_184), we ran the following commands to solve the issue:\\n\\n\\n- `For s1 # The disk slot 1 of the server that corresponds to mount point /u02`\\n- `For s7 # The disk slot 7 of the server that corresponds to mount point /u08`\\n\\n- Validated if there is a cache pinned for any device, running command:\\n\\n```bash\\nMegaCli64 -GetPreservedCacheList -a0 \\n ```\\n\\nIf the old disk has pinned the cache, the command will return something like:\\n\\n```\\nAdapter #0\\n \\nVirtual Drive(Target ID 07): Missing.\\n \\nExit Code: 0x00\\n```\\n- In this case, the disk in slot 7 had the pinned cache and had to clear.\\n\\nRemove the pinned cache by running command:\\n\\n```bash\\n#MegaCli64 -DiscardPreservedCache -L7 -force -a0 <<<< where -LX should be replaced by the Target ID number reported in previous step.\\n```\\nGet the `ENCLOSURE_NUMBER`\\n```bash\\nMegaCli64 LdPdInfo a0 | more\\n```\\n- Added the virtual disk back\\n\\n```bash\\nMegaCli64 CfgLdAdd r0[ENCLOSURE_NUMBER:slot] a0\\n```\\nOn our case was:\\n\\nFor `s1`\\n```bash\\nMegaCli64 CfgLdAdd r0[252:1] a0\\n```\\n\\nFor `s7`\\n\\n```bash\\nMegaCli64 CfgLdAdd r0[252:7] a0\\n```\\n\\nStarted configuring the disk at `slot1`\\n\\n```bash\\nbdadiskutility -f /u02\\n```\\n\\nWait until the mirroring is finished and after that.\\n\\nStarted configuring the disk at `slot7`\\n\\n```bash\\nbdadiskutility -f /u08\\n```\\n\\n- Checks:\\n\\nFor `s1`:\\n\\n```bash\\nparted /dev/disk/by-hba-slot/s1 -s unit chs print\\niscsi # Check that all disks appeared\\nlsblk # Check that all disks appeared\\n```\\n\\nFor `s7`:\\n\\n```bash\\nparted /dev/disk/by-hba-slot/s7 -s unit chs print\\niscsi # Check that all disks appeared\\nlsblk # Check that all disks appeared\\n```\\n\\n8. We proceed with the start of the `datanode` role of `dr1node02`"          },
          {
            "question": "How do you deduplicate rows in the `energy_efficiency.cell` table for a specific date range?",
            "answer": "1. Backup existing data:\\n```sql\\nCREATE TABLE energy_efficiency.cell_bak LIKE energy_efficiency.cell;\\nINSERT INTO TABLE energy_efficiency.cell_bak PARTITION (par_dt) SELECT * FROM energy_efficiency.cell;\\n```\\n2. Overwrite with distinct records:\\n```sql\\nINSERT OVERWRITE TABLE energy_efficiency.cell PARTITION (par_dt)\\nSELECT DISTINCT * FROM energy_efficiency.cell WHERE par_dt BETWEEN '20211210' AND '20211215';\\n```",
            "category": "Data Management & Query Execution",
            "context": "# Streamsets - Energy Efficiency\\n\\n## Access\\n\\nStreamsets Login Page: https://999.999.999.999:18636/\\n\\nFiles:\\n\\nFrom un2 with sdc user:\\n\\n```bash\\nsftp bigd@999.999.999.999\\ncd /ossrc\\n```\\n\\n## Check for Duplicates\\n\\nExecute the following from Impala\\n\\n```bash\\nselect count(*), par_dt from energy_efficiency.cell where par_dt>'202111201' group by par_dt order by par_dt desc;\\n```\\n\\n```bash\\nselect count(*) from (select distinct * from energy_efficiency.cell where par_dt='20211210') a;\\n```\\n\\n## Solve Duplicates\\n\\nExecute the following from Impala\\n\\nBackup table:\\n```bash\\nCREATE TABLE  energy_efficiency.cell LIKE energy_efficiency.cell;\\nINSERT INTO TABLE energy_efficiency.cell_bak PARTITION (par_dt) SELECT * FROM energy_efficiency.cell;\\n```\\n\\nModify table:\\n```bash\\nINSERT OVERWRITE TABLE energy_efficiency.cell partition (par_dt)\\n\tSELECT DISTINCT * FROM energy_efficiency.cell\\n\tWHERE par_dt between '20211210' and '20211215';\\n```\\n\\nDrop Backup table:\\n```bash\\nDROP TABLE energy_efficiency.cell;\\n```"          },
          {
            "question": "What are the steps to create a keytab file for a user in NYMA?",
            "answer": "1. SSH to kerb1 and run:\\n```bash\\nkadmin.local\\nlistprincs <user>@CNE.abc.GR\\naddprinc <user>@CNE.abc.GR\\nktadd -k /tmp/<user>.keytab -norandkey <user>@CNE.abc.GR\\n```\\n2. Copy the keytab to `un2`:\\n```bash\\nscp -p /tmp/<user>.keytab un2:/tmp\\n```\\n3. On `un2`, move it to the correct user folder:\\n```bash\\ncp /tmp/<user>.keytab /home/users/skokkoris/\\nchown skokkoris. /home/users/skokkoris/<user>.keytab\\n```",
            "category": "Application Functionality & Flow",
            "context": "# How to create a keytab in NYMA\\n\\nLogin into kerb1 node as root\\n\\n```bash\\nssh kerb1\\nsudo -i\\n```\\n\\nUse command-line interface to the Kerberos administration system\\n\\n```bash\\nkadmin.local\\n```\\n\\nCheck if there is a principal for the corresponding username\\n\\n```bash\\nlistprincs <username>@CNE.abc.GR\\n```\\n\\nCreate a principal if there is not one\\n\\n```bash\\naddprinc <username>CNE.abc.GR\\n```\\n\\nCreate the keytab\\n\\n```bash\\nktadd -k /tmp/<username>.keytab -norandkey <username>@CNE.abc.GR\\n```\\n\\nCopy the keytab file to un2 node\\n\\n```bash\\nscp -p /tmp/<username>.keytab un2:/tmp\\n```\\n\\nLogin into un2, place keytab file under /home/users/skokkoris/ and change ownership into skokkoris\\n\\n```bash\\nssh un2\\nsudo -i\\ncp -p /tmp/<username>.keytab /home/users/skokkoris/\\nchown skokkoris. /home/users/skokkoris/<username>.keytab\\n```"          },
          {
            "question": "How do you fix RStudio Connect when LDAP authentication fails after a password reset for bind user `t1-svc-cnebind`?",
            "answer": "1. SSH into unrstudio1 and verify LDAP bind user credentials:\\n```bash\\nldapsearch -H ldaps://PVDCAHR01.groupnet.gr -D \\\"t1-svc-cnebind\\\" -W -b \\\"dc=groupnet,dc=gr\\\"\\n```\\n2. If it fails, update the password in:\\n```bash\\nvi /etc/rstudio-connect/rstudio-connect.gcfg\\n```\\n3. Restart the service:\\n```bash\\nsystemctl restart rstudio-connect\\n```",
            "category": "Troubleshooting & Issue Resolution",
            "context": "## Contents:\\n\\n<b>Description:</b>\\n\\n`RStudio user applications not working We would like to inform you that the applications of the user kmpoletis are not running showing the following error. This morning we reset the user's password because it had expired. It can connect normally with the credentials. Also let me know that the applications of the other users (Charisis, Ploskas) are running normally.`\\n\\n<b>Actions Taken:</b>\\n\\n- Ssh to **unrstudio1**\\n\\n- Do an ldap search using `t1-svc-cnebind` as the following in order to check if `t1-svc-cnebind` password is still valid:\\n\\n```\\nldapsearch -H ldaps://PVDCAHR01.groupnet.gr -D \\\"t1-svc-cnebind\\\" -W -b \\\"dc=groupnet,dc=gr\\\" '(sAMAccountName=t1-svc-cnebind)'\\n```\\n\\n-  In the above case, if you get an error that you can't connect with the ldap server, that means it has an expired `t1-svc-cnebind` password, so you will need to replace it with a new one.\\n\\n- Check the configuration file below for the current ldap t1-svc-cnebind password & replace it with new **(Responsible for that abc Admin)**:\\n```\\nssh unrstudio1\\nvi /etc/rstudio-connect/rstudio-connect.gcfg\\n```\\n\\n\\n\\n"          }
    ]
}